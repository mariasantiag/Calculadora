<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>